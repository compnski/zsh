###############
#### ENV   ####
###############

export JAVA_HOME="$(/usr/libexec/java_home)"
export GOBIN="$HOME/src/clocktower/bin/go"
# homebrew runs out of git quota, use my personal token
export HOMEBREW_GITHUB_API_TOKEN=`cat ~/.github_homebrew_token`


#################
#### $PATH   ####
#################

# Overrides
PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
PATH="$(python3 -m site --user-base)/bin:${PATH}"
PATH="$JAVA_HOME/bin:$PATH"

# Additions
PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
PATH="$PATH:$HOME/bin"
PATH="$PATH:$GOBIN"
PATH="$PATH:$HOME/src/clocktower/scripts/kube/"

# Remove duplicates from path
typeset -U PATH


###############
#### RVM   ####
###############
# Load RVM into a shell session *as a function*
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"


###############
#### NVM   ####
###############
init-nvm() {
  if [[ -z "${NVM_DIR}" ]]; then
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
  fi
}

# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  init-nvm
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
# NOTE: By not calling `load-nvmrc` here, nvm won't be loaded until you `cd`
#  This will start all shells faster at the cost of nvm not being loaded util `cd .`
#  if you start the shell in the clocktower directory
# load-nvmrc
